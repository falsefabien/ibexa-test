parameters:
    ezpublish.http_cache.purge_type: local
    locale_fallback: en

    # One of `legacy` (default) or `solr`
    search_engine: '%env(SEARCH_ENGINE)%'

    # Session save path as used by symfony session handlers (eg. used for dsn with redis)
    ezplatform.session.save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'

    # Predefined pools are located in config/packages/cache_pool/
    # You can add your own cache pool to the folder mentioned above.
    # In order to change the default cache_pool use environmental variable export.
    # The line below must not be altered as required cache service files are resolved based on environmental config.
    cache_pool: '%env(CACHE_POOL)%'

    # By default cache ttl is set to 24h, when using Varnish you can set a much higher value. High values depends on
    # using EzSystemsPlatformHttpCacheBundle (default as of v1.12) which by design expires affected cache on changes
    httpcache_default_ttl: '%env(HTTPCACHE_DEFAULT_TTL)%'

    # Settings for HttpCache
    purge_server: '%env(HTTPCACHE_PURGE_SERVER)%'

    # Identifier used to generate the CSRF token. Commenting this line will result in authentication
    # issues both in AdminUI and REST calls
    ezpublish_rest.csrf_token_intention: authenticate

    # Varnish invalidation/purge token (for use on platform.sh, eZ Platform Cloud and other places you can't use IP for ACL)
    varnish_invalidate_token: '%env(resolve:default::HTTPCACHE_VARNISH_INVALIDATE_TOKEN)%'

    # Compile time handlers
    ## These are defined at compile time, and hence can't be set at runtime using env()
    ## config/env/generic.php takes care about letting you set them by env variables

    ## Session handler, by default set to file based (instead of ~) in order to be able to use %ezplatform.session.save_path%
    # env: SESSION_HANDLER_ID
    ezplatform.session.handler_id: session.handler.native_file

    ## Purge type used by HttpCache system ("local", "varnish"/"http", and on ee also "fastly")
    # env: HTTPCACHE_PURGE_TYPE
    purge_type: local
